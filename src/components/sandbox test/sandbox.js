import axios from "axios";
import { useEffect, useState } from "react";

// for file system acitvities
const suspiciousFilePaths = [
  "C:\\Windows\\System32\\",
  "C:\\Windows\\SysWOW64\\",
  "C:\\Users\\*\\AppData\\Local\\",
  "C:\\Users\\*\\AppData\\Roaming\\",
  "C:\\Temp\\",
  "C:\\Windows\\Temp\\",
  "C:\\Users\\*\\AppData\\Local\\Temp\\",
];

// for process activities.
const suspiciousProcessPaths = [
  /^C:\\Users\\[^\\]+\\AppData\\Local\\Temp\\.+\.exe$/,
  /^C:\\WINDOWS\\Temp\\.+\.exe$/,
  /^%WINDIR%\\SysWOW64\\.+\.exe$/,
  /^C:\\Program Files \(x86\)\\.+\.exe$/,
  /^C:\\Program Files\\.+\.exe$/,
  /^C:\\Windows\\SysWOW64\\.+\.exe$/,
  /^C:\\Windows\\System32\\.+\.exe$/,
  /^C:\\Windows\\explorer.exe.+$/,
  /^C:\\Windows\\explorer.exe$/,
  /^%SAMPLEPATH%\\.+\.exe$/,
];

const suspiciousCommands = [
  /rundll32.exe.+/,
  /cmd.exe.+/,
  /powershell.exe.+/,
  /del ".+\.exe"/,
  /copy ".+\.exe"/,
  /move ".+\.exe"/,
  /cscript.exe/,
  /wscript.exe/,
  /mstsc.exe/,
  /cmmon32.exe/,
];

const suspiciousExecutables = [
  "winlog.exe",
  "updater.exe",
  "help5j-tgfwh.exe",
  "help.exe",
  "NETSTAT.EXE",
  "NETSTAT.exe",
  "chkdskfhc.exe",
  "compattel\\DiagTrackRunner.exe",
  "DeviceDisplayObjectProvider.exe",
  "wuapihost.exe",
  "explorer.exe",
];

// for Registry Keys hash for test "d66e15eea51ebd4bfd13f8c97646253740b1e6a99328d22232fd01ae13ef5d05"
const suspiciousDeletedKeys = [
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run$/,
  /\\SYSTEM\\CurrentControlSet\\Services\\.+$/,
  /\\SOFTWARE\\Policies\\Microsoft\\Windows\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\.+$/,
];

const suspiciousOpenedKeys = [
  /\\SYSTEM\\CurrentControlSet\\Control\\.+$/,
  /\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\.+$/,
];

const suspiciousSetKeys = [
  /\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run$/,
  /\\SOFTWARE\\Policies\\Microsoft\\Windows\\.+$/,
  /\\SYSTEM\\CurrentControlSet\\Control\\.+\\AutoAdminLogon$/,
  /\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\\.+$/,
  /\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices\\.+$/,
];

// for DNS lookup
const suspiciousDNSPatterns = [
  /malicious\.com/,
  /phishing\.net/,
  /command-and-control-server\.org/,
];

const suspiciousDNSKeywords = [
  "botnet",
  "ransomware",
  "trojan",
  "exploit",
  "backdoor",
];
//////////////////////////////////////////////////////////////////////////////

const isSuspiciousFile = (file) =>
  suspiciousFilePaths.some((susPath) => file.startsWith(susPath));

const isSuspiciousProcess = function (process) {
  const isSusPath = suspiciousProcessPaths.some((susPath) =>
    susPath.test(process)
  );
  const isSusCommand = suspiciousCommands.some((susCommand) =>
    susCommand.test(process)
  );
  const isSusExe = suspiciousExecutables.some((susExe) =>
    process.includes(susExe)
  );

  return isSusPath || isSusCommand || isSusExe;
};

const isSuspiciousRegistrykey = (registryKey, patterns) =>
  patterns.some((pattern) => pattern.test(registryKey));

///////////////////////////////////////////////////////////////////////////////

const getSuspiciousFiles = (files) =>
  files && files.filter((file) => isSuspiciousFile(file));
const getSuspiciousProcesses = (processes) =>
  processes && processes.filter((process) => isSuspiciousProcess(process));
const getSuspiciousRegistryKeys = (registryKeys, pattern) =>
  registryKeys &&
  registryKeys.filter((regKey) => isSuspiciousRegistrykey(regKey, pattern));

///////////////////////////////////////////////////////////////////////////////

function Sandbox() {
  const apiKey =
    "4954437b14053ad6159f1ac9c6ed991d75b47a4815d614ce6050f18da1359e2b";
  // "6d88d7bd28bd02a2b84cdfa47fee9f343dd64eaed8d79022c10c527998b700e8";
  const [activities, setActivities] = useState({});
  const [suspiciousActivities, setSuspiciousActivities] = useState({});

  async function report(resourceType, resourceIdentifier) {
    try {
      const apiUrl = `https://www.virustotal.com/api/v3/${resourceType}/${resourceIdentifier}`;

      const response = await axios.get(apiUrl, {
        headers: {
          "x-apikey": apiKey,
        },
      });
      console.log(response.data.data.attributes.last_analysis_stats);
    } catch (err) {
      console.error(err);
    }
  }

  async function getBehviorSummary(id) {
    try {
      const url = `https://www.virustotal.com/api/v3/files/${id}/behaviour_summary`;

      const response = await axios.get(url, {
        headers: {
          "x-apikey": apiKey,
        },
      });
      //   filesDeleted = response.data.data.files_dropped.map((file) => file.path);
      const data = response.data.data;
      console.log(data);
      setActivities({
        files: {
          deleted: data.files_deleted,
          dropped:
            data.files_dropped && data.files_dropped.map((file) => file.path),
          opened: data.files_opened,
          written: data.files_written,
        },
        processes: {
          created: data.processes_created,
          injected: data.processes_injected,
          killed: data.processes_killed,
          terminated: data.processes_terminated,
        },
        registryKeys: {
          deleted: data.registry_keys_deleted,
          opened: data.registry_keys_opened,
          set: data.registry_keys_set,
        },
        DNSLookups:
          data.dns_lookups && data.dns_lookups.map((dn) => dn.hostname),
        ipTraffic:
          data.ip_traffic && data.ip_traffic.map((ip) => ip.destination_ip),
      });

      setSuspiciousActivities({
        files: {
          deleted: getSuspiciousFiles(data.files_deleted),
          dropped: getSuspiciousFiles(
            data.files_dropped && data.files_dropped.map((file) => file.path)
          ),
          opened: getSuspiciousFiles(data.files_opened),
          written: getSuspiciousFiles(data.files_written),
        },
        processes: {
          created: getSuspiciousProcesses(data.processes_created),
          injected: getSuspiciousProcesses(data.processes_injected),
          killed: getSuspiciousProcesses(data.processes_killed),
          terminated: getSuspiciousProcesses(data.processes_terminated),
        },
        registryKeys: {
          deleted: getSuspiciousRegistryKeys(
            data.registry_keys_deleted,
            suspiciousDeletedKeys
          ),
          opened: getSuspiciousRegistryKeys(
            data.registry_keys_opened,
            suspiciousOpenedKeys
          ),
          set: getSuspiciousRegistryKeys(
            data.registry_keys_set,
            suspiciousSetKeys
          ),
        },
        DNSLookups:
          data.dns_lookups &&
          data.dns_lookups.map((dn) => dn.hostname).slice(0, 4),
        ipTraffic:
          data.ip_traffic &&
          data.ip_traffic.map((ip) => ip.destination_ip).slice(0, 4),
      });
    } catch (error) {
      console.error(error);
    }
  }

  useEffect(() => {
    getBehviorSummary(
      "cbdc01fe169217339ffacf85ad71f3bd77ac6ac62224158f3084e4eafe5c252b"
    );
    // report("domains", "example.com");
  }, []);

  console.log(activities);
  console.log(suspiciousActivities);
  //   useEffect(function () {

  //   }, []);
  //   cbdc01fe169217339ffacf85ad71f3bd77ac6ac62224158f3084e4eafe5c252b
  return <div>Omar</div>;
}

export default Sandbox;
